{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/react/tabs/src/Tabs.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$reexport(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = Radix.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   * @defaultValue ltr\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir = 'ltr',\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={dir}\n        activationMode={activationMode}\n      >\n        <Primitive.div data-orientation={orientation} {...tabsProps} ref={forwardedRef} />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          dir={context.dir}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <Primitive.div\n        data-state={isSelected ? 'active' : 'inactive'}\n        data-orientation={context.orientation}\n        role=\"tabpanel\"\n        aria-labelledby={triggerId}\n        hidden={!isSelected}\n        id={contentId}\n        tabIndex={0}\n        {...contentProps}\n        ref={forwardedRef}\n      >\n        {isSelected && children}\n      </Primitive.div>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"],"names":["a","__esModule","default","$parcel$exportWildcard","dest","source","Object","keys","forEach","key","defineProperty","enumerable","get","createTabsContext","createTabsScope","createContextScope","createRovingFocusGroupScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","React","forwardRef","props","forwardedRef","__scopeTabs","value","valueProp","onValueChange","defaultValue","orientation","dir","activationMode","tabsProps","setValue","useControllableState","prop","onChange","defaultProp","_react","createElement","$cebddb0c75f42c980c43f093526f6ec6$var$TabsProvider","scope","baseId","useId","Primitive","div","_babelRuntimeHelpersExtends","ref","TabsList","loop","listProps","context","rovingFocusGroupScope","_radixUiReactRovingFocus","Root","asChild","role","TabsTrigger","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","Item","focusable","active","button","type","undefined","id","onMouseDown","composeEventHandlers","event","ctrlKey","preventDefault","onKeyDown","includes","onFocus","isAutomaticActivation","TabsContent","children","contentProps","hidden","tabIndex","List","Trigger","Content"],"version":3,"file":"index.js.map"}